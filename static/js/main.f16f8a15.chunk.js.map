{"version":3,"sources":["Store/constants.js","Components/Input/Input.styles.js","Components/Input/Input.js","Store/action.js","Components/Todo/Todo.styles.js","Components/Todo/Todo.js","Components/Todolist/TodoList.styles.js","Components/Todolist/TodoList.js","Components/SortButtons/SortButtons.styled.js","Components/SortButtons/SortButtons.js","App.js","Store/reducer.js","Store/store.js","index.js"],"names":["ADD_TODO","TOGGLE_TODO","REMOVE_TODO","SORT_DONE_TODO","SORT_NOT_DONE_TODO","StyledInput","styled","div","Input","dispatch","useDispatch","useState","userInput","setUserInput","handleSubmit","e","type","id","nanoid","text","addTodo","TextField","sx","width","label","variant","value","onChange","currentTarget","onKeyPress","key","Button","onClick","StyledTodo","Todo","complete","toggleTodo","style","textDecoration","IconButton","removeTodo","StyledTodoList","TodoList","todoArr","useSelector","state","todos","sortFlag","flag","useEffect","localStorage","setItem","JSON","stringify","sortArr","filter","todo","sortTodoArr","map","StyledSortDiv","SortButtons","App","className","Typography","textAlign","InitialState","length","parse","savedStateTodos","setFlag","action","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f16f8a15.chunk.js","sourcesContent":["export const ADD_TODO = \"ADD_TODO\";\r\nexport const TOGGLE_TODO = \"TOGGLE_TODO\";\r\nexport const REMOVE_TODO = \"REMOVE_TODO\";\r\nexport const SORT_DONE_TODO = \"SORT_DONE_TODO\";\r\nexport const SORT_NOT_DONE_TODO = \"SORT_NOT_DONE_TODO\";\r\nexport const SHOW_ALL = \"SHOW_ALL\";\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledInput = styled.div`\r\n  padding-left: 10px;\r\n  margin: 0, auto;\r\n`;\r\n","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addTodo } from \"../../Store/action\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { TextField } from \"@mui/material\";\r\nimport { StyledInput } from \"./Input.styles\";\r\n\r\nexport const Input = () => {\r\n  const dispatch = useDispatch();\r\n  const [userInput, setUserInput] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setUserInput(e.currentTarget.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    if (userInput) {\r\n      dispatch(addTodo(userInput));\r\n      setUserInput(\"\");\r\n    }\r\n  };\r\n  const onKeyPress = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      handleSubmit(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledInput>\r\n      <TextField\r\n        sx={{ width: \"70%\" }}\r\n        id=\"standard-basic\"\r\n        label=\"Введи задачу\"\r\n        variant=\"standard\"\r\n        value={userInput}\r\n        onChange={handleChange}\r\n        onKeyPress={onKeyPress}\r\n      />\r\n      <Button variant=\"contained\" onClick={handleSubmit}>\r\n        Добавить\r\n      </Button>\r\n    </StyledInput>\r\n  );\r\n};\r\n","import { nanoid } from \"@reduxjs/toolkit\";\r\nimport {\r\n  ADD_TODO,\r\n  TOGGLE_TODO,\r\n  REMOVE_TODO,\r\n  SORT_DONE_TODO,\r\n  SORT_NOT_DONE_TODO,\r\n  SHOW_ALL,\r\n} from \"./constants\";\r\n\r\n\r\nexport const addTodo = (userInput) => ({\r\n  type: ADD_TODO,\r\n  id: nanoid(),\r\n  text: userInput,\r\n});\r\n\r\nexport const toggleTodo = (id) => ({\r\n  type: TOGGLE_TODO,\r\n  id,\r\n});\r\nexport const removeTodo = (id) => ({\r\n  type: REMOVE_TODO,\r\n  id,\r\n});\r\n\r\nexport const sortDoneTodo = () => ({\r\n  type: SORT_DONE_TODO,\r\n});\r\n\r\nexport const sortNotDoneTodo = () => ({\r\n  type: SORT_NOT_DONE_TODO,\r\n});\r\n\r\nexport const showAllTodos = () => ({\r\n  type: SHOW_ALL,\r\n});\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledTodo = styled.div`\r\n  display: flex;\r\n  width: 100% ;\r\n  position: center;\r\n  align-items: center;\r\n  align-self: stretch;\r\n  justify-content: space-between;\r\n  margin-left: 10px;\r\n  margin-top: 5px;\r\n  padding-left: 15px;\r\n  border: 1px solid grey;\r\n  border-radius: 20px;\r\n`;\r\n","import { IconButton } from \"@mui/material\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { removeTodo, toggleTodo } from \"../../Store/action\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport { StyledTodo } from \"./Todo.styles\";\r\n\r\nexport function Todo({ id, text, complete }) {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <StyledTodo\r\n      onClick={() => dispatch(toggleTodo(id))}\r\n      style={{\r\n        textDecoration: complete ? \"line-through\" : \"none\",\r\n      }}\r\n      key={id}\r\n    >\r\n      {text}\r\n\r\n      <IconButton aria-label=\"delete\" onClick={() => dispatch(removeTodo(id))}>\r\n        <DeleteIcon />\r\n      </IconButton>\r\n    </StyledTodo>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledTodoList = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  \r\n`;\r\n","import { useSelector } from \"react-redux\";\r\nimport { Todo } from \"../Todo/Todo\";\r\nimport { StyledTodoList } from \"./TodoList.styles\";\r\nimport { SORT_DONE_TODO, SORT_NOT_DONE_TODO } from \"../../Store/constants\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport const TodoList = () => {\r\n  const todoArr = useSelector((state) => state.todos);\r\n  const sortFlag = useSelector((state) => state.flag);\r\n  useEffect(()=>{localStorage.setItem(\"savedStateTodos\",JSON.stringify(todoArr))})\r\n  \r\n\r\n  const sortTodoArr = (todoArr, sortFlag) => {\r\n    switch (sortFlag) {\r\n      case SORT_DONE_TODO:\r\n        return todoArr.filter((todo) => todo.complete);\r\n\r\n      case SORT_NOT_DONE_TODO:\r\n        return todoArr.filter((todo) => !todo.complete);\r\n\r\n      default:\r\n        return todoArr;\r\n    }\r\n  };\r\n  const sortArr = sortTodoArr(todoArr, sortFlag);\r\n  return (\r\n    <StyledTodoList>\r\n      \r\n        {sortArr.map((todo) => (\r\n          <Todo\r\n            key={todo.id}\r\n            id={todo.id}\r\n            text={todo.text}\r\n            complete={todo.complete}\r\n          />\r\n        ))}\r\n      \r\n    </StyledTodoList>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledSortDiv = styled.div`\r\n  margin: 10px;\r\n  padding-left: 10px;\r\n`;\r\n","import { Button } from \"@mui/material\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  showAllTodos,\r\n  sortDoneTodo,\r\n  sortNotDoneTodo,\r\n} from \"../../Store/action\";\r\nimport { StyledSortDiv } from \"./SortButtons.styled\";\r\n\r\nexport const SortButtons = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <StyledSortDiv>\r\n      <Button variant=\"contained\" onClick={() => dispatch(sortDoneTodo())}>\r\n        Выполненные\r\n      </Button>\r\n      <Button variant=\"contained\" onClick={() => dispatch(sortNotDoneTodo())}>\r\n        В процессе\r\n      </Button>\r\n      <Button variant=\"contained\" onClick={() => dispatch(showAllTodos())}>\r\n        Все\r\n      </Button>\r\n    </StyledSortDiv>\r\n  );\r\n};\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { Input } from \"./Components/Input/Input\";\nimport { TodoList } from \"./Components/Todolist/TodoList\";\nimport { Typography } from \"@mui/material\";\nimport { SortButtons } from \"./Components/SortButtons/SortButtons\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Typography textAlign=\"center\" variant=\"h3\">\n        Todo Redux\n      </Typography>\n      <Input />\n      <TodoList />\n      <SortButtons />\n    </div>\n  );\n}\n\nexport default App;\n","import {\r\n  ADD_TODO,\r\n  TOGGLE_TODO,\r\n  REMOVE_TODO,\r\n  SORT_DONE_TODO,\r\n  SORT_NOT_DONE_TODO,\r\n} from \"./constants\";\r\n\r\nconst InitialState =\r\nlocalStorage.length ? {todos:JSON.parse(localStorage.savedStateTodos), flag:\"SHOW_ALL\"} :\r\n{ todos: [], flag: \"SHOW_ALL\" }\r\n\r\nconst setFlag = (state, action) => {\r\n  return { ...state, flag: action.type };\r\n};\r\nexport const todoReducer = (\r\n  state = InitialState,\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ADD_TODO:\r\n      return {\r\n        todos: [\r\n          ...state.todos,\r\n          {\r\n            id: action.id,\r\n            text: action.text,\r\n            complete: false,\r\n          },\r\n        ],\r\n      };\r\n\r\n    case REMOVE_TODO:\r\n      return { todos: state.todos.filter((todo) => todo.id !== action.id) };\r\n\r\n    case TOGGLE_TODO:\r\n      return {\r\n        todos: state.todos.map((todo) =>\r\n          todo.id === action.id ? { ...todo, complete: !todo.complete } : todo\r\n        ),\r\n      };\r\n    case SORT_DONE_TODO:\r\n      return setFlag(state,action);\r\n\r\n    case SORT_NOT_DONE_TODO:\r\n      return setFlag(state,action);\r\n\r\n    default:\r\n      return setFlag(state,action);\r\n  }\r\n};\r\n","import { createStore } from \"redux\";\r\nimport { todoReducer } from \"./reducer\";\r\nexport const store = createStore(todoReducer);\r\n\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport { store } from \"./Store/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}